body {
  background-image: url('./images/back.jpg');
  background-size: cover; /* Ensure the image covers the whole area */
  background-repeat: no-repeat; /* Prevent the image from repeating */
  background-position: center center; /* Center the image */
  display: flex; /* Allow centering content */
  flex-direction: column; /* Stack content vertically */
  height: 100vh; /* Ensure the body takes up full viewport height */
}

.button {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: rgb(20, 20, 20);
  border: none;
  font-weight: 600;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
  cursor: pointer;
  transition-duration: 0.3s;
  overflow: hidden;
  position: relative;
  gap: 2px;
}

.svgIcon {
  width: 12px;
  transition-duration: 0.3s;
}

.svgIcon path {
  fill: white;
}

.button:hover {
  transition-duration: 0.3s;
  background-color: rgb(255, 69, 69);
  align-items: center;
  gap: 0;
}

.bin-top {
  transform-origin: bottom right;
}
.button:hover .bin-top {
  transition-duration: 0.5s;
  transform: rotate(160deg);
}

.edit-button {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: rgb(0, 0, 0);
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
  cursor: pointer;
  transition-duration: 0.3s;
  overflow: hidden;
  position: relative;
  text-decoration: none !important;
}

.edit-svgIcon {
  width: 17px;
  transition-duration: 0.3s;
}

.edit-svgIcon path {
  fill: rgb(255, 255, 255);
}

.edit-button:hover {
  border-radius: 50px;
  transition-duration: 0.3s;
  background-color: rgb(255, 0, 0);
  align-items: center;
}

.edit-button:hover .edit-svgIcon {
  width: 20px;
  transition-duration: 0.4s;
  transform: translateY(60%);
  -webkit-transform: rotate(360deg);
  transform: rotate(360deg);
}

.container {
  display: flex;
  flex-direction: column;
  gap: 7px;
  position: relative;
  color: white;
}

.container .label {
  font-size: 15px;
  padding-left: 10px;
  position: absolute;
  top: 13px;
  transition: 0.3s;
  pointer-events: none;
}

.input {
  width: 200px;
  height: 45px;
  border: none;
  outline: none;
  padding: 0px 7px;
  border-radius: 6px;
  color: #fff;
  font-size: 15px;
  background-color: transparent;
  box-shadow: 3px 3px 10px rgba(0,0,0,1),
  -1px -1px 6px rgba(255, 255, 255, 0.4);
}

.input:focus {
  border: 2px solid transparent;
  color: #fff;
  box-shadow: 3px 3px 10px rgba(0,0,0,1),
  -1px -1px 6px rgba(255, 255, 255, 0.4),
  inset 3px 3px 10px rgba(0,0,0,1),
  inset -1px -1px 6px rgba(255, 255, 255, 0.4);
}

.container .input:valid ~ .label,
.container .input:focus ~ .label {
  transition: 0.3s;
  padding-left: 2px;
  transform: translateY(-35px);
}

.container .input:valid,
.container .input:focus {
  box-shadow: 3px 3px 10px rgba(0,0,0,1),
  -1px -1px 6px rgba(255, 255, 255, 0.4),
  inset 3px 3px 10px rgba(0,0,0,1),
  inset -1px -1px 6px rgba(255, 255, 255, 0.4);
}




/* Hide the default checkbox */
.checkboxcontainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkboxcontainer {
  margin-right: 5px;
  display: inline-flex;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 1px;
  left: 0;
  height: 1em;
  width: 1em;
  border: 2px solid #414141;
  border-radius: 5px;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.320, 1);
}

.checkboxcontainer input:hover ~ .checkmark {
  border: 2px solid #0974f1;
}

/* When the checkbox is checked */
.checkboxcontainer input:checked ~ .checkmark {
  box-shadow: 0 0 15px rgba(9, 117, 241, 0.8);
  border: 1px solid #0974f1;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkboxcontainer input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkboxcontainer .checkmark:after {
  left: 0.35em;
  top: 0.15em;
  width: 0.25em;
  height: 0.55em;
  border: solid white;
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
}





/* From Uiverse.io by OptX71285225 */ 
/* Hide the default checkbox */
.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox container */
.checkbox-container {
  position: relative;
  display: inline-block;
  font-size: 18px; /* Make the checkbox slightly bigger */
  margin-bottom: 12px;
  cursor: pointer;
}

/* Style the checkmark */
.topcheckmark {
  position: absolute;
  top: 0px;
  left: 0;
  height: 22px; /* Make the checkbox slightly bigger */
  width: 22px; /* Make the checkbox slightly bigger */
  border: 2px solid #ccc; /* Default border color */
  border-radius: 6px; /* Round the corners */
  background-color: #fff; /* Default color for the box */
  transition: all 0.3s ease; /* Add smooth transition */
}

/* Show the checkmark when checkbox is checked */
.checkbox-container input:checked ~ .topcheckmark:after {
  display: block;
  animation: checkboxExpand 0.3s ease forwards;/* Add glow effect */
}

/* Style the checkmark/indicator */
.topcheckmark:after {
  content: "";
  position: absolute;
  display: none;
  top: 40%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%) rotate(45deg) scale(0); /* Center and hide initially, then scale to appear */
  width: 7px; /* Adjust size */
  height: 13px; /* Adjust size */
  border: solid #000; /* Default color for the tick */
  border-width: 0 3px 3px 0; /* Adjust thickness and direction */
}

/* When the checkbox is checked, change the box color to red */
.checkbox-container input:checked ~ .topcheckmark {
  background-color: #ff0000; /* Change box color to red */
  border-color: #ff0000; /* Change border color to red */
}

/* When the checkbox is checked, change the tick color to black */
.checkbox-container input:checked ~ .topcheckmark:after {
  border-color: #ffffff; /* Change tick color to black */
}

/* On hover, add a slight shadow */
.checkbox-container:hover .topcheckmark {
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.2); /* Add shadow effect */
}

/* Keyframes for expanding animation */
@keyframes checkboxExpand {
  0% {
    transform: translate(-50%, -50%) rotate(45deg) scale(0);
  }
  100% {
    transform: translate(-50%, -50%) rotate(45deg) scale(1);
  }
}
